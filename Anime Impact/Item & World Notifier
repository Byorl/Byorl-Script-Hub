while not game:IsLoaded() do task.wait() end

local Players = game:GetService("Players")
local HttpService = game:GetService("HttpService")
local RunService = game:GetService("RunService")


getgenv().settingsItemNotifier = {
    Enabled = true, -- true or false (Enables the Item Notifier)
    infiniteMode = true, -- true or false (Enables the infinite mode)
    sendVictoryScreen = true, -- true or false (Sends a Victory Screen embed)
    difficultyHardMode = true, -- true or false (Enables the difficulty hard mode)
    sendVictoryScreenEmbed = false, -- true or false (Sends a Victory Screen embed)
}



local function SendMessage(url, message)
    local headers = {
        ["Content-Type"] = "application/json"
    }
    local data = {
        ["content"] = message
    }
    local body = HttpService:JSONEncode(data)
    local response = request({
        Url = url,
        Method = "POST",
        Headers = headers,
        Body = body
    })
end

local function SendMessageEMBED(url, embed)
    local headers = {
        ["Content-Type"] = "application/json"
    }
    local data = {
        ["embeds"] = {
            {
                ["title"] = embed.title,
                ["description"] = embed.description,
                ["color"] = embed.color,
                ["fields"] = embed.fields,
                ["footer"] = {
                    ["text"] = embed.footer and embed.footer.text or ""
                }
            }
        }
    }
    local body = HttpService:JSONEncode(data)
    local response = request({
        Url = url,
        Method = "POST",
        Headers = headers,
        Body = body
    })
end




local function notifyItemReceived(itemName, itemType)
    if not getgenv().settingsItemNotifier.notifyItemReceived then
        getgenv().settingsItemNotifier.notifyItemReceived = true
        local url = "https://discordapp.com/api/webhooks/1259797945784602634/XCA_KRSkRk4Y7qtsyNcmI1bLZ0gmfP2-pq9w1gauDyOVPFbtJDI806n7qErmD4Y-Ng1k"
        local embed = {
            ["title"] = itemType .. " Item Received - " .. tostring(game.Players.LocalPlayer),
            ["description"] = "You have received a **" .. itemType .. "** item.",
            ["color"] = 65280,
            ["fields"] = {
                {
                    ["name"] = itemName,
                    ["value"] = "You managed to get a " .. itemType .. " " .. itemName .. "."
                }
            }
        }
        SendMessageEMBED(url, embed)
    end
end

local function checkItems(scrollingFrame)
    local items = {
        {"Mega Lucky Potion", "Mythical"},
        {"Miracle Token", "Mythical"},
        {"Premium Soul Ticket", "Mythical"},
        {"Soul Ticket", "Mythical"},
    }

    for _, item in ipairs(items) do
        local itemName, itemType = unpack(item)
        if scrollingFrame:FindFirstChild(itemName) then
            notifyItemReceived(itemName, itemType)
        end
    end
end



local function sendVictoryScreenEmbed()
    local player = game:GetService("Players").LocalPlayer
    local victoryScreen = player.PlayerGui:FindFirstChild("VictoryScreenNew")
    if not victoryScreen or getgenv().settingsItemNotifier.sendVictoryScreenEmbed then
        return
    end

    getgenv().settingsItemNotifier.sendVictoryScreenEmbed = true
    local victoryScreenFrame = victoryScreen:FindFirstChild("Victory Screen")
    if not victoryScreenFrame then return end

    local levelName = victoryScreenFrame:FindFirstChild("Level Name")
    local totalTime = victoryScreenFrame:FindFirstChild("TotalTime")
    if not levelName or not totalTime then return end

    local modifiedLevelName = levelName.Text:gsub(".*Infinite Mode: .* Wave: ", "")
    local modifiedTotalTime = totalTime.Text:gsub("Total Time: ", "")
    local modifiedWorldName = levelName.Text

    if getgenv().settingsItemNotifier.difficultyHardMode then
        modifiedWorldName = modifiedWorldName:gsub("Hard.* HARD Level %d+ %- The Spider", function(match)
            return match:gsub("Hard", ""):gsub(" HARD Level %d+ %- The Spider", "")
        end)
    elseif getgenv().settingsItemNotifier.infiniteMode then
        modifiedWorldName = modifiedWorldName:gsub("World: Spirit Society Infinite Mode: Spirit Society Wave: %d+", function(match)
            return match:gsub("World: Spirit Society Infinite Mode: Spirit Society Wave: %d+", "Spirit Society")
        end)
    else
        return
    end

    local modifiedDifficultyName = getgenv().settingsItemNotifier.difficultyHardMode and "Hard" or "Easy"

    local gemsText = victoryScreenFrame.Resource.Gem.Gems.Text
    local coinsText = victoryScreenFrame.Resource.Coins.Coins.Text

    local url = "https://discordapp.com/api/webhooks/1259797945784602634/XCA_KRSkRk4Y7qtsyNcmI1bLZ0gmfP2-pq9w1gauDyOVPFbtJDI806n7qErmD4Y-Ng1k"
    local embed = {
        color = 65280,
        title = levelName.Text:find("Infinite Mode") and "Wave Cleared" or "Level Completed",
        description = levelName.Text:find("Infinite Mode") and ("World: **" .. modifiedWorldName .. "**\nWave Reached: **" .. modifiedLevelName .. "**\nTime: **" .. modifiedTotalTime .. "**\n\nGems: **" .. gemsText .. "**\nCoins: **" .. coinsText .. "**") or ("Time: **" .. modifiedTotalTime .. "**\nWorld: **" .. modifiedWorldName .. "**\nDifficulty: **" .. modifiedDifficultyName .. "**\n\nGems: **" .. gemsText .. "**\nCoins: **" .. coinsText .. "**"),
        footer = { text = "Victory Screen Notification" },
        fields = {
            { name = "Player:", value = "Username: **" .. tostring(player) .. "**" }
        }
    }

    SendMessageEMBED(url, embed)
end



local function checkForVictoryScreen()
    local player = Players.LocalPlayer
    local victoryScreen = player.PlayerGui:FindFirstChild("VictoryScreenNew")

    if victoryScreen then
        local victoryScreenFrame = victoryScreen:WaitForChild("Victory Screen")
        local scrollingFrame = victoryScreenFrame:WaitForChild("ScrollingFrame")
        checkItems(scrollingFrame)
        if getgenv().settingsItemNotifier.sendVictoryScreen == true then
            sendVictoryScreenEmbed()
        end
        return true
    end
    return false
end



local function startHeartbeatCheck()
    local heartbeatConnection
    heartbeatConnection = RunService.Heartbeat:Connect(function()
        if checkForVictoryScreen() then
            heartbeatConnection:Disconnect()
        end
    end)
end


if getgenv().settingsItemNotifier.Enabled == true then
    print("Item Notifier Loaded")
    if not checkForVictoryScreen() then
        startHeartbeatCheck()
    end
end
